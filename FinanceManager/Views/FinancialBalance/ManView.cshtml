@{
    ViewBag.Title = "Finance Balance";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ManView</title>
</head>
<body>
    <table class="table table-striped  table-bordered">
        <tr>
            <th>Przychody</th>
            <th>Wydatki</th>
        </tr>
        <tr>
            <th>
                <div>
                    <table class="table table-striped table-hover table-bordered">
                        <tr>
                            <th>Kwota: </th>
                            <th>Data: </th>
                            <th>Źródło: </th>
                            <th>Opis: </th>
                        </tr>
                        <tbody id="tBodyIncomes"></tbody>
                    </table>
                    <label class="form-control-static" id="labelSumOfIncomes"></label>
                </div>
            </th>
            <th>
                <div>
                    <table class="table table-striped table-hover table-bordered">
                        <tr>
                            <th>Kwota: </th>
                            <th>Data: </th>
                            <th>Źródło: </th>
                            <th>Opis: </th>
                        </tr>
                        <tbody id="tBodyOutgoings"></tbody>
                    </table>
                    <label class="form-control-static" id="labelSumOfOutgoings"></label>
                </div>
            </th>
        </tr>
    </table>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script>

        document.getElementById('buttonComfirm')
               .addEventListener('click',
                   function () {
                       checkSelectedRadioButton();
                   });

        function checkSelectedRadioButton() {

            var firstRadioButton = document.getElementById('firstRadioButton');
            var secondRadioButton = document.getElementById('secondRadioButton');
            var thirdRadioButton = document.getElementById('thirdRadioButton');

            var firstDate = document.getElementById('dayFirstFilter').value;
            var secondDate = document.getElementById('daySecondFilter').value;

            if (firstRadioButton.checked) {
                incomingDateFilter(firstDate, secondDate);
                outgoingDateFilter(firstDate, secondDate);
            } else if (secondRadioButton.checked) {
                OutgoingLastTimeFilter();
                IncomingLastTimeFilter();
            } else if (thirdRadioButton.checked) {
                IncomingsByLastOperations();
                OutGoingsByLastOperations();
            }

        }

        function GetSumOfOutgoings() {
            $.ajax({
                url: "FinancialBalance/SumOfOutgoings",
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: "{}",
                dataType: "json",
                success: function (data) {
                    document.getElementById('labelSumOfOutgoings').innerHTML = "Suma to: " + AmountWithUnit(data);
                },
                error: function (result) {
                    alert("Error");
                }
            });
        }
        function GetSumOfIncomes() {
            $.ajax({
                url: "FinancialBalance/SumOfIncomings",
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: "{}",
                dataType: "json",
                success: function (data) {
                    document.getElementById('labelSumOfIncomes').innerHTML = "Suma to: " + AmountWithUnit(data);
                },
                error: function (result) {
                    alert("Error");
                }
            });
        }

        $(function () {
            checkSelectedRadioButton();
        });

        function IncomingsByLastOperations() {

            var counterOfLastOperations = document.getElementById('counterOfLastOperations').value;

            $.ajax({
                url: "FinancialBalance/GetIncomesByLastOperations/?count=" + counterOfLastOperations,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: {},
                dataType: "json",
                success: function (data) {
                    fillTableIncoming(data, "#tBodyIncomes");
                },
                error: function (result) {
                    alert("Error");
                }
            });
        }

        function OutGoingsByLastOperations() {
            var counterOfLastOperations = document.getElementById('counterOfLastOperations').value;
            $.ajax({
                url: "FinancialBalance/GetOutgoingsByLastOperations/?count=" + counterOfLastOperations,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: {},
                dataType: "json",
                success: function (data) {
                    fillTableOutgoings(data, "#tBodyOutgoings");
                },
                error: function (result) {
                    alert("Error");
                }
            });

        }

        function OutgoingLastTimeFilter() {

            var timeDiffValue = document.getElementById('difTimeSelect').value;
            var selectedEndPoint = "";
            switch (timeDiffValue) {
                case "days":
                    selectedEndPoint = "GetOutgoingsByNumberOfDays/?days=";
                    break;
                case "weeks":
                    selectedEndPoint = "GetOutgoingsByNumberOfWeeks/?weeks=";
                    break;
                case "months":
                    selectedEndPoint = "GetOutgoingsByNumberOfMonth/?month=";
                    break;
            }
            var selectableFilterValue = document.getElementById('selectableFilterValue').value;

            $.ajax({
                url: "FinancialBalance/" + selectedEndPoint + selectableFilterValue,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: {},
                dataType: "json",
                success: function (data) {
                    fillTableOutgoings(data, "#tBodyOutgoings");
                },
                error: function (result) {
                    alert("Error");
                }
            });

        }
        function IncomingLastTimeFilter() {

            var timeDiffValue = document.getElementById('difTimeSelect').value;
            var selectedEndPoint = "";
            switch (timeDiffValue) {
                case "days":
                    selectedEndPoint = "GetIncomingsByNumberOfDays/?days=";
                    break;
                case "weeks":
                    selectedEndPoint = "GetIncomesByNumberOfWeeks/?weeks=";
                    break;
                case "months":
                    selectedEndPoint = "GetIncomingsByNumberOfMonth/?month=";
                    break;
            }
            var selectableFilterValue = document.getElementById('selectableFilterValue').value;

            $.ajax({
                url: "FinancialBalance/" + selectedEndPoint + selectableFilterValue,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: {},
                dataType: "json",
                success: function (data) {
                    fillTableIncoming(data, "#tBodyIncomes");
                },
                error: function (result) {
                    alert("Error");
                }
            });

        }
        function fillTableIncoming(data, tableName) {
            var row = "";
            $.each(data,
                function (index, item) {
                    row += "<tr><td>" +
                        AmountWithUnit(item.Amount) +
                        "</td><td>" +
                        ConvertData(item.Date) +
                        "</td><td>" +
                        item.Source.Name +
                        "</td><td>" +
                        checkIfEmpty(item.Description) +
                        "</td></tr>";
                });
            $(tableName).html(row);
        }
        function fillTableOutgoings(data, tableName) {
            var row = "";
            $.each(data,
                function (index, item) {
                    row += "<tr><td>" +
                        AmountWithUnit(item.Amount) +
                        "</td><td>" +
                        ConvertData(item.Date) +
                        "</td><td>" +
                        item.Type.Name +
                        "</td><td>" +
                        checkIfEmpty(item.Description) +
                        "</td></tr>";
                });
            $(tableName).html(row);
        }
        function incomingDateFilter(firstDate, secondDate) {

            $.ajax({
                url: "FinancialBalance/GetIncomesByTimeFilter/?firstDateTime=" + firstDate + "&" + "secondDateTime=" + secondDate,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: {},
                dataType: "json",
                success: function (data) {
                    fillTableIncoming(data, "#tBodyIncomes");
                },
                error: function (result) {
                    alert("Error");
                }
            });
        }
        function outgoingDateFilter(firstDate, secondDate) {
            $.ajax({
                url: "FinancialBalance/GetOutgoingsByTimeFilter/?firstDateTime=" + firstDate + "&" + "secondDateTime=" + secondDate,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: {},
                dataType: "json",
                success: function (data) {
                    fillTableOutgoings(data, "#tBodyOutgoings");
                },
                error: function (result) {
                    alert("Error");
                }
            });
        }
        function ConvertData(date) {

            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(date);
            var dt = new Date(parseFloat(results[1]));
            return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
        }

        function AmountWithUnit(amount) {
            return amount + " zł";
        }

        function checkIfEmpty(description) {
            if (description) {
                return description;
            }
            return "";
        }
    </script>
</body>
</html>