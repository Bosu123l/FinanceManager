@model Domain.Models.Outgoing
<div class="form-group">
    @using (Html.BeginForm("AddOutgoingAmount", "FinancialManager", FormMethod.Post, new { id = "ID" }))
            {

        @Html.Label("Amount: ", new { @class = "form-control-static" });   @Html.TextBoxFor(x => x.Amount, new { @class = "form-control" });
        <br />

        List<SelectListItem> elements = new List<SelectListItem>();

        foreach (Domain.Models.TypeOfOutgoing type in ViewBag.OutGoing)
        {
            elements.Add(new SelectListItem()
            {
                Value = type.ID.ToString(),
                Text = type.Name,

            });
        }

        @Html.Label("Type: ", new { @class = "form-control-static" });   @Html.DropDownListFor(x => x.TypeID, new List<SelectListItem>(elements), new { @class = "form-control" });
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                Dodaj Typ
                <span class="caret"></span>
            </button>
            <div class="dropdown-menu">
                @using (Html.BeginForm(MVC.FinancialManager.AddOutgointType()))
                {
                    @Html.TextArea("typeOfOutgoing", "Typ tutaj", new { @class = "form-control" })
                    <button class="form-control" type="submit">
                        Dodaj Typ
                    </button>
                }
            </div>

        </div>
        <br />
        @Html.Label("Description: ", new { @class = "form-control-static" }); @Html.TextAreaFor(x => x.Description, new { @class = "form-control" });
        <br />

        <input type="submit" value="Dodaj Kwote" class="form-control" />

    }

</div>

